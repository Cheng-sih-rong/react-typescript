{"version":3,"sources":["container/Header/Header.tsx","component/Botton/Button.tsx","container/List/List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","to","Button","props","style","backgroundColor","type","content","List","prop","path","useLocation","pathname","showList","show","console","log","list","useState","change","setChange","getValList","btnDisplay","display","title","length","map","item","onClick","index","deleteItem","key","doneItem","todoList","App","sendVal","Input","inputVal","useRef","ref","value","current","push","Date","now","done","delete","setSendList","getInputValue","sendList","changeFun","filter","doneList","val","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59317de6.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink}  from 'react-router-dom';\nimport './Header.scss';\n\n\n\nfunction Header() {\n  \n  return (\n    <div className=\"header flex-between\">\n    <h1>TodoList</h1>\n    <ul className=\"flex nav gap\">\n      <NavLink to=\"/undo\" >待辦項目</NavLink>\n      <NavLink to=\"/done\" >完成項目</NavLink>\n    </ul>  \n      \n  \n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './Button.scss'\n// import  from 'react-router-dom';\n// import './Header.scss';\n\n// const btnType ={\n\n// }\n\n\nfunction Button(props:any) {\nconst typeStyle = function(){\n    if(!props.type) return 'rgb(113, 95, 78)'\n    if(props.type===\"detele\") return 'red'\n    \n}    \n\nconst style ={\n    backgroundColor:typeStyle()\n}\n\n  return (\n    <div className=\"button\">\n        <button style={style} >{props.content}</button>\n    </div>\n  );\n}\n\nexport default Button;\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './List.scss';\nimport Button from '../../component/Botton/Button';\n\n\nfunction List(prop: any) {\n\n  const location = useLocation()\n  const path = location.pathname\n  const showList = prop.show\n  console.log(showList)\n  const [change, setChange] = useState(true)\n  // const [aaa, setAaa] = useState(showList)\n  var getValList = [...showList]\n\n\n  const deleteItem = function (index: any) {\n    const list = showList.map((item: any) => item['key'] === index ? item['delete'] = true : item['delete'] = false)\n    setChange(!change)\n    getValList = list\n    // setAaa(getValList)\n    console.log(change)\n\n  }\n\n  const doneItem = function (index: any) {\n    const list: any = showList.map((item: any) => item['key'] === index ? item['done'] = true : item['done'] = false)\n    setChange(!change)\n    console.log(change)\n    // setAaa(list)\n    getValList = list\n  }\n\n  const btnDisplay = {\n    display: path === '/done' ? 'none' : 'flex'\n  }\n\n  const title = path === '/undo' ? '待辦' : '完成'\n\n\n  //項目\n\n  const itemLoop = function (list: Array<any>,) {\n\n    return list.map((item) => {\n      return (<div key={item.key}>\n        <div className=\"flex item-wrap\">\n          {console.log(change, 'render')}\n          <p>{item.content}</p>\n          <div className=\"flex center gap\">\n            <div onClick={() => deleteItem(item.key)}><Button content=\"刪除\" type=\"detele\" /></div>\n            <div style={btnDisplay} onClick={() => doneItem(item.key)}><Button content=\"完成\" /></div>\n          </div>\n\n        </div>\n        <hr />\n      </div>)\n    })\n  }\n\n\n  return (\n    <div className=\"content-edit wrap\">\n      <div className=\"title\">\n        <h3>{title + '項目'}</h3>\n        {`(${getValList.length > 0 ? `你有${getValList.length}個${title}項目` : `目前無${title}項目`})`}\n      </div>\n      <div className=\"item\">\n        {itemLoop(getValList)}\n      </div>\n\n    </div>\n  );\n}\n\nexport default List;\n","import React, { useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.scss';\nimport Header from './container/Header/Header';\nimport List from './container/List/List';\nimport Button from './component/Botton/Button';\n// const todoList =[{key:1,content:'買牛奶',done:false},{key:2,content:'繳費',done:true}]\n//儲存原始資料\nconst todoList: any = []\n\n\n/*元件App*/\nfunction App() {\n\n  //  待辦和未完成分別的list\n  function doneList(list: any) {\n    return list.filter((item: any) => {\n      return item.done && !item.delete\n    })\n  }\n  function undoList(list: any) {\n    return list.filter((item: any) => {\n      return !item.done && !item.delete\n    })\n  }\n\n\n  let sendVal = {}\n\n  /*輸入元件input*/\n  function Input(prop: any) {\n    const inputVal = useRef<any>(null)\n\n    function getInputValue() {\n      const value = inputVal.current.value\n      if (inputVal.current.value === '') return\n      else {\n        todoList.push({ key: Date.now(), content: value, done: false })\n        sendVal = { key: Date.now(), content: value, done: false, delete: false }\n        console.log(todoList)\n        inputVal.current.value = ''\n\n      }\n      setSendList(todoList)\n    }\n\n    return (\n      <div className=\"input flex\" >\n        <input type=\"text\" ref={inputVal} />\n        <div onClick={() => getInputValue()}>\n          <Button content=\"新增事項\" />\n        </div>\n      </div>\n    );\n  }\n  /*輸入元件input 結束*/\n\n\n\n  const [sendList, setSendList] = useState([])\n  const location = useLocation()\n  const changeFun = location.pathname === '/undo' ? undoList(sendList) : doneList(sendList)\n  // const changeFun =location.pathname ==='/undo'?undoList(todoList):doneList(todoList)\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <div className=\"container\">\n        <Input />\n        <div className=\"list-wrapper\">\n          <List show={[...changeFun]} val={sendVal} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}